vendor_name = ModelSim
source_file = 1, C:/Computer_Organization/course_design/pc_function.v
source_file = 1, C:/Computer_Organization/course_design/reg_function.v
source_file = 1, C:/Computer_Organization/course_design/db/course_design.cbx.xml
design_name = reg_function
instance = comp, \R0[0]~output\, R0[0]~output, reg_function, 1
instance = comp, \R0[1]~output\, R0[1]~output, reg_function, 1
instance = comp, \R0[2]~output\, R0[2]~output, reg_function, 1
instance = comp, \R0[3]~output\, R0[3]~output, reg_function, 1
instance = comp, \R0[4]~output\, R0[4]~output, reg_function, 1
instance = comp, \R0[5]~output\, R0[5]~output, reg_function, 1
instance = comp, \R0[6]~output\, R0[6]~output, reg_function, 1
instance = comp, \R0[7]~output\, R0[7]~output, reg_function, 1
instance = comp, \R1[0]~output\, R1[0]~output, reg_function, 1
instance = comp, \R1[1]~output\, R1[1]~output, reg_function, 1
instance = comp, \R1[2]~output\, R1[2]~output, reg_function, 1
instance = comp, \R1[3]~output\, R1[3]~output, reg_function, 1
instance = comp, \R1[4]~output\, R1[4]~output, reg_function, 1
instance = comp, \R1[5]~output\, R1[5]~output, reg_function, 1
instance = comp, \R1[6]~output\, R1[6]~output, reg_function, 1
instance = comp, \R1[7]~output\, R1[7]~output, reg_function, 1
instance = comp, \R2[0]~output\, R2[0]~output, reg_function, 1
instance = comp, \R2[1]~output\, R2[1]~output, reg_function, 1
instance = comp, \R2[2]~output\, R2[2]~output, reg_function, 1
instance = comp, \R2[3]~output\, R2[3]~output, reg_function, 1
instance = comp, \R2[4]~output\, R2[4]~output, reg_function, 1
instance = comp, \R2[5]~output\, R2[5]~output, reg_function, 1
instance = comp, \R2[6]~output\, R2[6]~output, reg_function, 1
instance = comp, \R2[7]~output\, R2[7]~output, reg_function, 1
instance = comp, \R3[0]~output\, R3[0]~output, reg_function, 1
instance = comp, \R3[1]~output\, R3[1]~output, reg_function, 1
instance = comp, \R3[2]~output\, R3[2]~output, reg_function, 1
instance = comp, \R3[3]~output\, R3[3]~output, reg_function, 1
instance = comp, \R3[4]~output\, R3[4]~output, reg_function, 1
instance = comp, \R3[5]~output\, R3[5]~output, reg_function, 1
instance = comp, \R3[6]~output\, R3[6]~output, reg_function, 1
instance = comp, \R3[7]~output\, R3[7]~output, reg_function, 1
instance = comp, \data_input[0]~input\, data_input[0]~input, reg_function, 1
instance = comp, \ra[1]~input\, ra[1]~input, reg_function, 1
instance = comp, \ra[0]~input\, ra[0]~input, reg_function, 1
instance = comp, \en~input\, en~input, reg_function, 1
instance = comp, \Decoder0~0\, Decoder0~0, reg_function, 1
instance = comp, \Decoder0~0clkctrl\, Decoder0~0clkctrl, reg_function, 1
instance = comp, \R0[0]$latch\, R0[0]$latch, reg_function, 1
instance = comp, \data_input[1]~input\, data_input[1]~input, reg_function, 1
instance = comp, \R0[1]$latch\, R0[1]$latch, reg_function, 1
instance = comp, \data_input[2]~input\, data_input[2]~input, reg_function, 1
instance = comp, \R0[2]$latch\, R0[2]$latch, reg_function, 1
instance = comp, \data_input[3]~input\, data_input[3]~input, reg_function, 1
instance = comp, \R0[3]$latch\, R0[3]$latch, reg_function, 1
instance = comp, \data_input[4]~input\, data_input[4]~input, reg_function, 1
instance = comp, \R0[4]$latch\, R0[4]$latch, reg_function, 1
instance = comp, \data_input[5]~input\, data_input[5]~input, reg_function, 1
instance = comp, \R0[5]$latch\, R0[5]$latch, reg_function, 1
instance = comp, \data_input[6]~input\, data_input[6]~input, reg_function, 1
instance = comp, \R0[6]$latch\, R0[6]$latch, reg_function, 1
instance = comp, \data_input[7]~input\, data_input[7]~input, reg_function, 1
instance = comp, \R0[7]$latch\, R0[7]$latch, reg_function, 1
instance = comp, \Decoder0~1\, Decoder0~1, reg_function, 1
instance = comp, \Decoder0~1clkctrl\, Decoder0~1clkctrl, reg_function, 1
instance = comp, \R1[0]$latch\, R1[0]$latch, reg_function, 1
instance = comp, \R1[1]$latch\, R1[1]$latch, reg_function, 1
instance = comp, \R1[2]$latch\, R1[2]$latch, reg_function, 1
instance = comp, \R1[3]$latch\, R1[3]$latch, reg_function, 1
instance = comp, \R1[4]$latch\, R1[4]$latch, reg_function, 1
instance = comp, \R1[5]$latch\, R1[5]$latch, reg_function, 1
instance = comp, \R1[6]$latch\, R1[6]$latch, reg_function, 1
instance = comp, \R1[7]$latch\, R1[7]$latch, reg_function, 1
instance = comp, \Decoder0~2\, Decoder0~2, reg_function, 1
instance = comp, \Decoder0~2clkctrl\, Decoder0~2clkctrl, reg_function, 1
instance = comp, \R2[0]$latch\, R2[0]$latch, reg_function, 1
instance = comp, \R2[1]$latch\, R2[1]$latch, reg_function, 1
instance = comp, \R2[2]$latch\, R2[2]$latch, reg_function, 1
instance = comp, \R2[3]$latch\, R2[3]$latch, reg_function, 1
instance = comp, \R2[4]$latch\, R2[4]$latch, reg_function, 1
instance = comp, \R2[5]$latch\, R2[5]$latch, reg_function, 1
instance = comp, \R2[6]$latch\, R2[6]$latch, reg_function, 1
instance = comp, \R2[7]$latch\, R2[7]$latch, reg_function, 1
instance = comp, \Decoder0~3\, Decoder0~3, reg_function, 1
instance = comp, \Decoder0~3clkctrl\, Decoder0~3clkctrl, reg_function, 1
instance = comp, \R3[0]$latch\, R3[0]$latch, reg_function, 1
instance = comp, \R3[1]$latch\, R3[1]$latch, reg_function, 1
instance = comp, \R3[2]$latch\, R3[2]$latch, reg_function, 1
instance = comp, \R3[3]$latch\, R3[3]$latch, reg_function, 1
instance = comp, \R3[4]$latch\, R3[4]$latch, reg_function, 1
instance = comp, \R3[5]$latch\, R3[5]$latch, reg_function, 1
instance = comp, \R3[6]$latch\, R3[6]$latch, reg_function, 1
instance = comp, \R3[7]$latch\, R3[7]$latch, reg_function, 1
